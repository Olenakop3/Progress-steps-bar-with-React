{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentActive","setCurrentActive","progressWidth","setProgressWidth","progressStyle","backgroundColor","position","top","left","transform","height","width","zIndex","transition","className","id","style","onClick","newActive","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA0DeA,MAvDf,WAAgB,IAAD,EAE6BC,mBAAS,GAFtC,mBAENC,EAFM,KAESC,EAFT,OAG6BF,mBAAS,GAHtC,mBAGNG,EAHM,KAGSC,EAHT,KAMPC,EAAgB,CACpBC,gBAAiB,UACjBC,SAAU,WACVC,IAAK,MACLC,KAAM,EACNC,UAAW,mBACXC,OAAQ,MACRC,MAAOT,EACPU,OAAQ,KAERC,WAAY,YAwBd,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,WAAWC,GAAG,aAAaC,MAAOZ,IACjD,qBAAKU,UAAU,gBAAf,eACA,qBAAKA,UAAWd,GAAiB,EAAI,gBAAkB,SAAvD,eACA,qBAAKc,UAAWd,GAAiB,EAAI,gBAAkB,SAAvD,eACA,qBAAKc,UAAWd,GAAiB,EAAI,gBAAkB,SAAvD,kBAEF,wBAAQc,UAAU,MAAMC,GAAG,OAAOE,QApBP,WAC7B,IAAIC,EAAYlB,EACZkB,EAAY,IACdA,IACAjB,EAAiBiB,GAEjBf,GADae,EAAY,GAAK,EAAI,IACT,OAc0CC,SAA4B,IAAlBnB,EAA7E,kBACA,wBAAQc,UAAU,MAAMC,GAAG,OAAOE,QA/BP,WAC7B,IAAIC,EAAYlB,EACZkB,EAAY,IACdA,IACAjB,EAAiBiB,GAEjBf,GADae,EAAY,GAAK,EAAI,IACT,OAyB0CC,SAA4B,IAAlBnB,EAA7E,sBCzCSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b0b4547f.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [currentActive, setCurrentActive] = useState(1);\n  const [progressWidth, setProgressWidth] = useState(0);\n\n  \n  const progressStyle = {\n    backgroundColor: '#3498db',\n    position: 'absolute',\n    top: '50%',\n    left: 0,\n    transform: 'translateY(-50%)',\n    height: '4px',\n    width: progressWidth,\n    zIndex: '-1', \n    /* makes sure it's behind the numbers */\n    transition: '.4s ease'\n  }\n\n  const incrementCurrentActive = () => {\n    let newActive = currentActive\n    if (newActive < 4) {\n      newActive++;\n      setCurrentActive(newActive);\n      let width = (newActive - 1) / 3 * 100\n      setProgressWidth(width + '%')\n    }\n  };\n\n  const decrementCurrentActive = () => {\n    let newActive = currentActive\n    if (newActive > 1) {\n      newActive--;\n      setCurrentActive(newActive);\n      let width = (newActive - 1) / 3 * 100\n      setProgressWidth(width + '%')\n    }\n  };\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"progress-container\">\n        <div className=\"progress\" id=\"idprogress\" style={progressStyle} ></div>\n        <div className=\"circle active\">1</div>\n        <div className={currentActive >= 2 ? \"circle active\" : \"circle\"}>2</div>\n        <div className={currentActive >= 3 ? \"circle active\" : \"circle\"}>3</div>\n        <div className={currentActive >= 4 ? \"circle active\" : \"circle\"}>4</div>\n      </div>\n      <button className=\"btn\" id=\"prev\" onClick={decrementCurrentActive} disabled={currentActive === 1}>Prev</button>\n      <button className=\"btn\" id=\"next\" onClick={incrementCurrentActive} disabled={currentActive === 4}>Next</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}